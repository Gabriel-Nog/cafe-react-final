// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Banner    Banner[]
  Order     Order[]
}

model Role {
  id        String   @id @default(cuid())
  name      String   @unique
  users     User[]   @relation
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
}

model Product {
  id           String         @id @default(cuid())
  name         String
  price        Float
  slug         String
  image        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  orders       Order[]        @relation("OrderProducts")
  OrderProduct OrderProduct[]
}

model Order {
  id               String         @id @default(cuid())
  value            Float
  deliveryLocation String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  products         Product[]      @relation("OrderProducts")
  OrderProduct     OrderProduct[]
}

model OrderProduct {
  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}
